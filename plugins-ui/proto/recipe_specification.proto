syntax = "proto3";

package types;

import "google/protobuf/struct.proto";
import "constraint.proto";
import "resource.proto";
import "scheduling.proto";

option go_package = "github.com/vultisig/recipes/types";

// RecipeSchema defines what types of recipes/policies a plugin can handle
// This is used for UI filtering and policy validation
message RecipeSchema {
  // Schema version for future compatibility
  int32 version = 1;

  // Scheduling specification version this plugin supports
  int32 schedule_version = 2;

  // Plugin identification
  string plugin_id = 3;
  string plugin_name = 4;
  int32 plugin_version = 5;

  // What resources this plugin can handle with their parameter constraints
  repeated ResourcePattern supported_resources = 6;

  // What scheduling capabilities this plugin supports
  SchedulingCapability scheduling = 7;

  // Plugin requirements
  PluginRequirements requirements = 8;

  // Plugin configuration
  google.protobuf.Struct configuration = 9;
}

// ResourcePattern defines a specific resource and what constraints its parameters support
message ResourcePattern {
  // Specific resource (e.g., ethereum.eth.transfer)
  ResourcePath resource_path = 1;

  // What constraint types each parameter of this resource supports
  repeated ParameterConstraintCapability parameter_capabilities = 2;

  // Whether this resource is required by the plugin
  bool required = 3;
}

// ParameterConstraintCapability defines what constraint types a parameter supports
message ParameterConstraintCapability {
  // Parameter name (e.g., "recipient", "amount")
  string parameter_name = 1;

  // Supported constraint types for this parameter
  repeated ConstraintType supported_types = 2;

  // Whether this parameter must be constrained
  bool required = 3;
}

// PluginRequirements defines what the plugin needs to function
message PluginRequirements {
  // Minimum Vultisig version required
  int32 min_vultisig_version = 1;

  // Supported blockchain networks
  repeated string supported_chains = 2;
}
